type Login {
    token: String!
    user: User!
}

type Query {
    login(email: String!, password: String!): Login!

    dept(where: DeptWhereInput): Dept
    depts(where: DeptWhereInput): [Dept!]

    user(where: UserWhereInput): User
    users(where: UserWhereInput): [User!]

    program(where: ProgramWhereInput): Program!
    programs(where: ProgramWhereInput): [Program!]

    student(where: StudentWhereInput): Student!
    students(where: StudentWhereInput): [Student!]

    course(where: CourseWhereInput): Course!
    courses(where: CourseWhereInput): [Course!]

    section(where: SectionWhereInput): Section!
    sections(where: SectionWhereInput): [Section!]

    test(where: TestWhereInput): Test!
    tests(where: TestWhereInput): [Test!]

    marking(where: MarkingWhereInput): Marking!
    markings(where: MarkingWhereInput): [Marking!]

    report(where: ReportWhereInput): Report!
    reports(where: ReportWhereInput): [Report!]
}

type Mutation {

    createDept(data: DeptCreateInput): Dept!
    updateDept(where: DeptWhereInput, data: DeptUpdateInput): Dept!
    deleteDept(where: DeptWhereInput): Dept!

    createUser(data: UserCreateInput): User!
    uploadUsers(fileName: String!): [User!]
    updateUser(where: UserWhereInput, data: UserUpdateInput): User!
    deleteUser(where: UserWhereInput): User!

    createProgram(data: ProgramCreateInput, mapData: ProgramCourseMapInput): Program!
    updateProgram(where: ProgramWhereInput, data: ProgramUpdateInput): Program!
    deleteProgram(where: ProgramWhereInput): Program!
    attachCourses(where: ProgramWhereInput, mapData: ProgramCourseMapInput): Program!

    createStudent(data: StudentCreateInput): Student!
    updateStudent(where: StudentWhereInput, data: StudentUpdateInput): Student!
    deleteStudent(where: StudentWhereInput): Student!
    attachSections(where: StudentWhereInput, mapData: StudentSectionMapInput): Student!

    createCourse(data: CourseCreateInput, mapData: CourseProgramMapInput): Course!
    updateCourse(where: CourseWhereInput, data: CourseUpdateInput): Course!
    deleteCourse(where: CourseWhereInput): Course!
    attachPrograms(where: CourseWhereInput, mapData: CourseProgramMapInput): Course!

    createSection(data: SectionCreateInput): Section!
    updateSection(where: SectionWhereInput, data: SectionUpdateInput): Section!
    deleteSection(where: SectionWhereInput): Section!
    attachStudents(where: SectionWhereInput, mapData: SectionStudentMapInput): Section!

    createTest(data: TestCreateInput): Test!
    updateTest(where: TestWhereInput, data: TestUpdateInput): Test!
    deleteTest(where: TestWhereInput): Test!

    createMarking(data: MarkingCreateInput): Marking!
    uploadMarking(data: MarkingUploadInput): [Marking!]
    downloadMarking(sectionId: ID!, testId: ID!): String!
    deleteMarking(where: MarkingWhereInput): Marking!

    createReport(data: ReportCreateInput): [Report!]
    deleteReport(where: ReportWhereInput): Report!
    deleteReports: Boolean!

}